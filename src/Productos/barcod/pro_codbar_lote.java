/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Productos.barcod;

import Conexion_DB.*;
import java.awt.event.KeyEvent;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;

/**
 *
 * @author user
 */
public class pro_codbar_lote extends javax.swing.JDialog {

    /**
     * Creates new form Departamentos
     */
    public pro_codbar_lote(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        btn_recargar.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txt_id = new javax.swing.JTextField();
        txt_nom = new javax.swing.JTextField();
        btnbuscar = new javax.swing.JButton();
        chk_precio = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        des_out = new javax.swing.JLabel();
        txt_pre_a = new javax.swing.JCheckBox();
        txt_pre_d = new javax.swing.JCheckBox();
        lbl_precio_b = new javax.swing.JCheckBox();
        ch_precio_outlet = new javax.swing.JCheckBox();
        txt_pre_ata = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb_prod_etiq = new javax.swing.JTable();
        btn_recargar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Etiquetas");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_4/print.png"))); // NOI18N
        jButton1.setText("Imprimir");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 400, 130, 50));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Nro Transferencia:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 30));

        txt_id.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_id.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_id.setEnabled(false);
        jPanel1.add(txt_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 120, 30));

        txt_nom.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_nom.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_nom.setEnabled(false);
        jPanel1.add(txt_nom, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 510, 30));

        btnbuscar.setBackground(new java.awt.Color(255, 255, 255));
        btnbuscar.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        btnbuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_4/transfer.png"))); // NOI18N
        btnbuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnbuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 10, 70, 60));

        chk_precio.setBackground(new java.awt.Color(255, 255, 255));
        chk_precio.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        chk_precio.setText("Incluir precio");
        chk_precio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chk_precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_precioActionPerformed(evt);
            }
        });
        jPanel1.add(chk_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 50, 120, 30));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("Precio venta(A*):");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 90, -1, 30));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel14.setText("Precio D*:");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 210, 70, 30));

        jLabel10.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel10.setText("Precio B*:");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 130, -1, 30));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel9.setText("MÃ­nimo(C*):");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 170, -1, 30));

        des_out.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        des_out.setText("Outlet:");
        jPanel1.add(des_out, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 250, 80, 30));

        txt_pre_a.setBackground(new java.awt.Color(255, 255, 255));
        txt_pre_a.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_pre_a.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_pre_aActionPerformed(evt);
            }
        });
        jPanel1.add(txt_pre_a, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 90, 30, 30));

        txt_pre_d.setBackground(new java.awt.Color(255, 255, 255));
        txt_pre_d.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_pre_d.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_pre_dActionPerformed(evt);
            }
        });
        jPanel1.add(txt_pre_d, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 210, 30, 30));

        lbl_precio_b.setBackground(new java.awt.Color(255, 255, 255));
        lbl_precio_b.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        lbl_precio_b.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbl_precio_bActionPerformed(evt);
            }
        });
        jPanel1.add(lbl_precio_b, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 130, 40, 30));

        ch_precio_outlet.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ch_precio_outlet.setForeground(new java.awt.Color(204, 0, 0));
        ch_precio_outlet.setContentAreaFilled(false);
        ch_precio_outlet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_precio_outletActionPerformed(evt);
            }
        });
        jPanel1.add(ch_precio_outlet, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 250, 40, 30));

        txt_pre_ata.setBackground(new java.awt.Color(255, 255, 255));
        txt_pre_ata.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_pre_ata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_pre_ataActionPerformed(evt);
            }
        });
        jPanel1.add(txt_pre_ata, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 170, 40, 30));

        jSeparator1.setForeground(new java.awt.Color(51, 0, 0));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 80, 120, 10));

        tb_prod_etiq = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tb_prod_etiq.setFont(new java.awt.Font("Segoe UI", 0, 11)); // NOI18N
        tb_prod_etiq.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tb_prod_etiq.setRequestFocusEnabled(false);
        tb_prod_etiq.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_prod_etiqMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tb_prod_etiqMouseEntered(evt);
            }
        });
        tb_prod_etiq.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tb_prod_etiqKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tb_prod_etiqKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tb_prod_etiqKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(tb_prod_etiq);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 710, 370));

        btn_recargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_recargarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_recargar, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 20, -1, 20));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Para el cliente:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 890, 470));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        if (txt_id.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Ingrese una transferencia vÃ¡lida");
        } else {
            String capcod = "", capcan = "";
            for (int i = 0; i < tb_prod_etiq.getRowCount(); i++) {
                capcod = tb_prod_etiq.getValueAt(i, 0).toString();
                capcan = tb_prod_etiq.getValueAt(i, 2).toString();

                ImprimiEtiq(capcod, capcan);

            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbuscarActionPerformed
        BUscar_transferencia ecv;
        ecv = new BUscar_transferencia(new javax.swing.JDialog(), true);
        ecv.setVisible(true);
    }//GEN-LAST:event_btnbuscarActionPerformed

    private void chk_precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_precioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chk_precioActionPerformed

    private void txt_pre_dActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_pre_dActionPerformed
        txt_pre_a.setSelected(false);
        lbl_precio_b.setSelected(false);
        txt_pre_ata.setSelected(false);
        txt_pre_d.setSelected(true);
        ch_precio_outlet.setSelected(false);
    }//GEN-LAST:event_txt_pre_dActionPerformed

    private void lbl_precio_bActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbl_precio_bActionPerformed
        txt_pre_a.setSelected(false);
        lbl_precio_b.setSelected(true);
        txt_pre_ata.setSelected(false);
        txt_pre_d.setSelected(false);
        ch_precio_outlet.setSelected(false);
    }//GEN-LAST:event_lbl_precio_bActionPerformed

    private void txt_pre_ataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_pre_ataActionPerformed
        txt_pre_a.setSelected(false);
        lbl_precio_b.setSelected(false);
        txt_pre_ata.setSelected(true);
        txt_pre_d.setSelected(false);
        ch_precio_outlet.setSelected(false);
    }//GEN-LAST:event_txt_pre_ataActionPerformed

    private void ch_precio_outletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_precio_outletActionPerformed
        txt_pre_a.setSelected(false);
        lbl_precio_b.setSelected(false);
        txt_pre_ata.setSelected(false);
        txt_pre_d.setSelected(false);
        ch_precio_outlet.setSelected(true);
    }//GEN-LAST:event_ch_precio_outletActionPerformed

    private void tb_prod_etiqMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_prod_etiqMouseClicked

    }//GEN-LAST:event_tb_prod_etiqMouseClicked

    private void tb_prod_etiqMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_prod_etiqMouseEntered

    }//GEN-LAST:event_tb_prod_etiqMouseEntered

    private void tb_prod_etiqKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_prod_etiqKeyPressed
        char Tecla = evt.getKeyChar();

        if (Tecla == KeyEvent.VK_ENTER) {

        }

        if (Tecla == KeyEvent.VK_ESCAPE) {

        }
    }//GEN-LAST:event_tb_prod_etiqKeyPressed

    private void tb_prod_etiqKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_prod_etiqKeyReleased

    }//GEN-LAST:event_tb_prod_etiqKeyReleased

    private void tb_prod_etiqKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_prod_etiqKeyTyped

    }//GEN-LAST:event_tb_prod_etiqKeyTyped

    private void txt_pre_aActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_pre_aActionPerformed
        txt_pre_a.setSelected(true);
        lbl_precio_b.setSelected(false);
        txt_pre_ata.setSelected(false);
        txt_pre_d.setSelected(false);
        ch_precio_outlet.setSelected(false);
    }//GEN-LAST:event_txt_pre_aActionPerformed

    private void btn_recargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_recargarActionPerformed
        cargar(txt_id.getText());
   
    }//GEN-LAST:event_btn_recargarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pro_codbar_lote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pro_codbar_lote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pro_codbar_lote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pro_codbar_lote.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                pro_codbar_lote dialog = new pro_codbar_lote(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btn_recargar;
    private javax.swing.JButton btnbuscar;
    private javax.swing.JCheckBox ch_precio_outlet;
    private javax.swing.JCheckBox chk_precio;
    private javax.swing.JLabel des_out;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JCheckBox lbl_precio_b;
    public static javax.swing.JTable tb_prod_etiq;
    public static javax.swing.JTextField txt_id;
    public static javax.swing.JTextField txt_nom;
    private javax.swing.JCheckBox txt_pre_a;
    private javax.swing.JCheckBox txt_pre_ata;
    private javax.swing.JCheckBox txt_pre_d;
    // End of variables declaration//GEN-END:variables

    void ImprimiEtiq(String codigo, String impre) {

        int n = Integer.parseInt(impre);
        if (chk_precio.isSelected()) {

            if (txt_pre_a.isSelected()) {

                for (int i = 0; i < n; i++) {
                    try {
                        Connection cn = conectar.getInstance().getConnection();

                        Map parametro = new HashMap();
                        parametro.clear();
                        parametro.put("codigo", codigo);
                        URL in = this.getClass().getResource("/Productos/barcod/codbar_precio.jasper");
                        JasperReport reporte = (JasperReport) JRLoader.loadObject(in);
                        JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);
                        JasperPrintManager.printPage(print, 0, false);
                        conectar.getInstance().closeConnection(cn);

                    } catch (JRException ex) {

                    } catch (SQLException ex) {
                        Logger.getLogger(pro_codbar_lote.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }

            if (lbl_precio_b.isSelected()) {
                for (int i = 0; i < n; i++) {
                    try {
                        Connection cn = conectar.getInstance().getConnection();

                        Map parametro = new HashMap();
                        parametro.clear();
                        parametro.put("codigo", codigo);
                        URL in = this.getClass().getResource("/Productos/barcod/codbar_precio_b.jasper");
                        JasperReport reporte = (JasperReport) JRLoader.loadObject(in);
                        JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);
                        JasperPrintManager.printPage(print, 0, false);
                        conectar.getInstance().closeConnection(cn);

                    } catch (JRException ex) {

                    } catch (SQLException ex) {
                        Logger.getLogger(pro_codbar_lote.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

            if (txt_pre_ata.isSelected()) {
                for (int i = 0; i < n; i++) {
                    try {
                        Connection cn = conectar.getInstance().getConnection();

                        Map parametro = new HashMap();
                        parametro.clear();
                        parametro.put("codigo", codigo);
                        URL in = this.getClass().getResource("/Productos/barcod/codbar_precio_c.jasper");
                        JasperReport reporte = (JasperReport) JRLoader.loadObject(in);
                        JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);
                        JasperPrintManager.printPage(print, 0, false);
                        conectar.getInstance().closeConnection(cn);

                    } catch (JRException ex) {

                    } catch (SQLException ex) {
                        Logger.getLogger(pro_codbar_lote.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            if (txt_pre_d.isSelected()) {
                for (int i = 0; i < n; i++) {
                    try {
                        Connection cn = conectar.getInstance().getConnection();

                        Map parametro = new HashMap();
                        parametro.clear();
                        parametro.put("codigo", codigo);
                        URL in = this.getClass().getResource("/Productos/barcod/codbar_precio_d.jasper");
                        JasperReport reporte = (JasperReport) JRLoader.loadObject(in);
                        JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);
                        JasperPrintManager.printPage(print, 0, false);
                        conectar.getInstance().closeConnection(cn);

                    } catch (JRException ex) {

                    } catch (SQLException ex) {
                        Logger.getLogger(pro_codbar_lote.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

            if (ch_precio_outlet.isSelected()) {
                for (int i = 0; i < n; i++) {
                    try {
                        Connection cn = conectar.getInstance().getConnection();

                        Map parametro = new HashMap();
                        parametro.clear();
                        parametro.put("codigo", codigo);
                        URL in = this.getClass().getResource("/Productos/barcod/codbar_precio_o.jasper");
                        JasperReport reporte = (JasperReport) JRLoader.loadObject(in);
                        JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);
                        JasperPrintManager.printPage(print, 0, false);
                        conectar.getInstance().closeConnection(cn);

                    } catch (JRException ex) {

                    } catch (SQLException ex) {
                        Logger.getLogger(pro_codbar_lote.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }

        } else {

            for (int i = 0; i < n; i++) {
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    Map parametro = new HashMap();
                    parametro.clear();
                    parametro.put("codigo", codigo);
                    URL in = this.getClass().getResource("/Productos/barcod/codbar.jasper");
                    JasperReport reporte = (JasperReport) JRLoader.loadObject(in);
                    JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);
                    JasperPrintManager.printPage(print, 0, false);
                    conectar.getInstance().closeConnection(cn);

                } catch (JRException ex) {

                } catch (SQLException ex) {
                    Logger.getLogger(pro_codbar_lote.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    void cargar(String valor) {
        String mostrar = "SELECT cod_pro,des_pro,cant_pro FROM transf_detalles WHERE  num_transf='" + valor + "'";
        String[] titulos = {"Id Producto", "DescripciÃ³n", "Cantidad"};
        String[] Registros = new String[7];
        DefaultTableModel model = new DefaultTableModel(null, titulos);

        try {
            Connection cn = conectar.getInstance().getConnection();

            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(mostrar);
            while (rs.next()) {
                Registros[0] = rs.getString(1);
                Registros[1] = rs.getString(2);
                Registros[2] = rs.getString(3);
          

                model.addRow(Registros);
            }
            tb_prod_etiq.setModel(model);

            tb_prod_etiq.getColumnModel().getColumn(0).setPreferredWidth(100);
            tb_prod_etiq.getColumnModel().getColumn(1).setPreferredWidth(350);
            tb_prod_etiq.getColumnModel().getColumn(2).setPreferredWidth(100);
      
            conectar.getInstance().closeConnection(cn);

        } catch (SQLException ex) {
            Logger.getLogger(pro_codbar_lote.class.getName()).log(Level.SEVERE, null, ex);
        }

    }


}
