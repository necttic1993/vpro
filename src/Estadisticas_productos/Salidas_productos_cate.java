/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Estadisticas_productos;

import Conexion_DB.conectar;
import static Loggin_Principal.NECTTIC.ingreso;
import Loggin_Principal.Seleccion_alma_salidas_pro;
import Productos.items.Departamentos_List_salidas;
import java.math.BigDecimal;
import java.net.URL;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.export.JRPrintServiceExporter;
import net.sf.jasperreports.engine.export.JRPrintServiceExporterParameter;
import net.sf.jasperreports.engine.util.JRLoader;

public class Salidas_productos_cate extends javax.swing.JDialog {

    DefaultTableModel model;
    private static DefaultTableCellRenderer tcr;

    public Salidas_productos_cate(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btn_buscar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb_control = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_cant_pro = new javax.swing.JTextField();
        jd_fin = new org.jdesktop.swingx.JXDatePicker();
        jd_ini = new org.jdesktop.swingx.JXDatePicker();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_total_ventas = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txt_id_dep_salidas = new javax.swing.JTextField();
        txt_nom_dep_salidas = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txt_nom_vs = new javax.swing.JTextField();
        txt_cat_vs = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txt_alma_salidas = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Categorias:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 90, 30));

        btn_buscar.setBackground(new java.awt.Color(255, 255, 255));
        btn_buscar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_4/graphic.png"))); // NOI18N
        btn_buscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 40, 60, 50));

        tb_control.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tb_control.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tb_control.setShowHorizontalLines(false);
        tb_control.setShowVerticalLines(false);
        tb_control.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_controlMouseClicked(evt);
            }
        });
        tb_control.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tb_controlKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tb_control);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 1120, 430));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Fecha Inicio:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, 30));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Fecha Final:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, 80, 30));

        txt_cant_pro.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_cant_pro.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_cant_pro.setText("0");
        txt_cant_pro.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        txt_cant_pro.setEnabled(false);
        jPanel1.add(txt_cant_pro, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 550, 70, 30));
        jPanel1.add(jd_fin, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 130, 30));
        jPanel1.add(jd_ini, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 130, 30));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("Total Nota:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 550, 70, 30));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel7.setText("Cantidad:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(980, 550, 70, 30));

        txt_total_ventas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_total_ventas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_total_ventas.setText("0");
        txt_total_ventas.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        txt_total_ventas.setEnabled(false);
        jPanel1.add(txt_total_ventas, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 550, 70, 30));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_4/print.png"))); // NOI18N
        jButton1.setToolTipText("Imprimir extracto de venta");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 40, 60, 50));

        txt_id_dep_salidas.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_id_dep_salidas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_id_dep_salidas.setText("0");
        txt_id_dep_salidas.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_id_dep_salidas.setEnabled(false);
        jPanel1.add(txt_id_dep_salidas, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 90, 30));

        txt_nom_dep_salidas.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_nom_dep_salidas.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_nom_dep_salidas.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_nom_dep_salidas.setEnabled(false);
        jPanel1.add(txt_nom_dep_salidas, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 370, 30));

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos_3/lupa.png"))); // NOI18N
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 40, 60, 30));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Sucursal/Almac√©n:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 70, -1, 30));

        txt_nom_vs.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_nom_vs.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_nom_vs.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_nom_vs.setEnabled(false);
        jPanel1.add(txt_nom_vs, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 70, 370, 30));

        txt_cat_vs.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_cat_vs.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_cat_vs.setText("0");
        txt_cat_vs.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_cat_vs.setEnabled(false);
        jPanel1.add(txt_cat_vs, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 70, 90, 30));

        jButton8.setBackground(new java.awt.Color(255, 255, 255));
        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos_3/lupa.png"))); // NOI18N
        jButton8.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 70, 60, 30));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel8.setText("Departamentos:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 30));

        txt_alma_salidas.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_alma_salidas.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_alma_salidas.setEnabled(false);
        jPanel1.add(txt_alma_salidas, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 70, 100, 30));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos_3/lupa.png"))); // NOI18N
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 70, 60, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1140, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        java.sql.Date fecha_ini = new java.sql.Date(jd_ini.getDate().getTime());
        java.sql.Date fecha_fin = new java.sql.Date(jd_fin.getDate().getTime());
        String depa = txt_id_dep_salidas.getText();
        String cate = txt_cat_vs.getText();
        String var = "0";
        String almacen = txt_alma_salidas.getText();

        if (almacen.equals("0000001")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //2
        if (almacen.equals("0000002")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_2 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_2 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_2 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_2 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //3
        if (almacen.equals("0000003")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_3 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_3 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_3 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_3 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //4
        if (almacen.equals("0000004")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_4 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_4 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_4 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_4 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }

        //5
        if (almacen.equals("0000005")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_5 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_5 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_5 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_5 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //6
        if (almacen.equals("0000006")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_6 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_6 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_6 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_6 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //7
        if (almacen.equals("0000007")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_7 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_7 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_7 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_7 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //8
        if (almacen.equals("0000008")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_8 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_8 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_8 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_8 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //9
        if (almacen.equals("0000009")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_9 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_9 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_9 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_9 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //10
        if (almacen.equals("0000010")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_10 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_10 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_10 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_10 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //11
        if (almacen.equals("0000011")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_11 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_11 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_11 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_11 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //12
        if (almacen.equals("0000012")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_12 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_12 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_12 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_12 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //13
        if (almacen.equals("0000013")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_13 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_13 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_13 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_13 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //14
        if (almacen.equals("0000014")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_14 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_14 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_14 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_14 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //15
        if (almacen.equals("0000015")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_15 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_15 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_15 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_15 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //16
        if (almacen.equals("0000016")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_16 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_16 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_16 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_16 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //17
        if (almacen.equals("0000017")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_17 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_17 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_17 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_17 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //18
        if (almacen.equals("0000018")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_18 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_18 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_18 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_18 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //19
        if (almacen.equals("0000019")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_19 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_19 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_19 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_19 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //20
        if (almacen.equals("0000020")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_20 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_20 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_20 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_20 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //21
        if (almacen.equals("0000021")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_21 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_21 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_21 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_21 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //22
        if (almacen.equals("0000022")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_22 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_22 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_22 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_22 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //23
        if (almacen.equals("0000023")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_23 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_23 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_23 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_23 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //24
        if (almacen.equals("0000024")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_24 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_24 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_24 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_24 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //25
        if (almacen.equals("0000025")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_25 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_25 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_25 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_25 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        ///26
        if (almacen.equals("0000026")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_26 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_26 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_26 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_26 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //27
        if (almacen.equals("0000027")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_27 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_27 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_27 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_27 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //28
        if (almacen.equals("0000028")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_28 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_28 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_28 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_28 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //29
        if (almacen.equals("0000029")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_29 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_29 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_29 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_29 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }
        //30
        if (almacen.equals("0000030")) {

            //todos
            if (depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro,count(v.num_bol),sum(v.cant_pro),p.pro_des,p.pro_cod,p.pro_cod_barra FROM ventas_detalles_30 AS v INNER JOIN  tienda_productos AS p ON v.cod_pro=p.pro_cod WHERE v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "'  group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();

            }

            //solo departamento
            if (!depa.equals(var) && cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_30 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
            //solo categorias
            if (depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_30 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }

            if (!depa.equals(var) && !cate.equals(var)) {

                String sql = " SELECT v.cod_pro, count(v.num_bol), sum(v.cant_pro),p.pro_cod, p.pro_depa,p.pro_des FROM ventas_detalles_30 AS v INNER JOIN tienda_productos AS p ON  v.cod_pro = p.pro_cod WHERE p.pro_cat='" + cate + "' AND  p.pro_depa='" + depa + "' AND v.data BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' group by v.cod_pro";
                cargarVentas(sql);
                calcularcantida();
                calcularTotal();
            }
        }


    }//GEN-LAST:event_btn_buscarActionPerformed

    private void tb_controlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_controlMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tb_controlMouseClicked

    private void tb_controlKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_controlKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tb_controlKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
        if (printService.length > 0)//si existen impresoras
        {
            //se elige la impresora
            PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                    "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
            if (impresora != null) //Si se selecciono una impresora
            {

                Productos_Sale ps;// 
                List<Productos_Sale> lista = new ArrayList<>(); //Creamos una lista de empleados con ArrayList para obtener cada empleado
                for (int i = 0; i < tb_control.getRowCount(); i++) { // Iterena cada fila de la tabla
                    ps = new Productos_Sale(tb_control.getValueAt(i, 0).toString(), tb_control.getValueAt(i, 1).toString(), //Tomamos de la tabla el valor de cada columna y creamos un objeto empleado
                            tb_control.getValueAt(i, 2).toString(), tb_control.getValueAt(i, 3).toString());
                    lista.add(ps); //Agregamos el objeto empleado a la lista
                }

                try {

                    java.sql.Date fecha_ini = new java.sql.Date(jd_ini.getDate().getTime());
                    java.sql.Date fecha_fin = new java.sql.Date(jd_fin.getDate().getTime());
                    String depa = txt_id_dep_salidas.getText();
                    String total = txt_total_ventas.getText();
                    String items = txt_cant_pro.getText();

                    Map parametro = new HashMap();
                    parametro.clear();
                    parametro.put("fecha_ini", fecha_ini);
                    parametro.put("fecha_fin", fecha_fin);
                    parametro.put("depa", depa);
                    parametro.put("total", total);
                    parametro.put("items", items);

                    URL in = this.getClass().getResource("/Estadisticas_productos/Pro_salida.jasper");
                    JasperReport reporte = (JasperReport) JRLoader.loadObject(in);
                    JasperPrint print = JasperFillManager.fillReport(reporte, parametro, new JRBeanCollectionDataSource(lista));

                    JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();
                    jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                    jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                    //  jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                    jrprintServiceExporter.exportReport();
                } catch (JRException ex) {
                    Logger.getLogger(Salidas_productos_cate.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }

        }

        // JOptionPane.showMessageDialog(null, "En construcci√≥n");
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        Departamentos_List_salidas dl;
        dl = new Departamentos_List_salidas(new javax.swing.JDialog(), true);
        dl.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        Categorias_vs cl;
        cl = new Categorias_vs(new javax.swing.JDialog(), true);
        cl.setVisible(true);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        Seleccion_alma_salidas_pro sp;
        sp = new Seleccion_alma_salidas_pro(new javax.swing.JDialog(), true);
        sp.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Salidas_productos_cate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Salidas_productos_cate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Salidas_productos_cate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Salidas_productos_cate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Salidas_productos_cate dialog = new Salidas_productos_cate(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private org.jdesktop.swingx.JXDatePicker jd_fin;
    private org.jdesktop.swingx.JXDatePicker jd_ini;
    public static javax.swing.JTable tb_control;
    public static javax.swing.JTextField txt_alma_salidas;
    private javax.swing.JTextField txt_cant_pro;
    public static javax.swing.JTextField txt_cat_vs;
    public static javax.swing.JTextField txt_id_dep_salidas;
    public static javax.swing.JTextField txt_nom_dep_salidas;
    public static javax.swing.JTextField txt_nom_vs;
    private javax.swing.JTextField txt_total_ventas;
    // End of variables declaration//GEN-END:variables

    void cargarVentas(String sql) {
        String[] titulos = {"Id Producto", "Nombre", "Notas vendidas", "Cantidad"};
        String[] Registros = new String[13];
        model = new DefaultTableModel(null, titulos);

        try {
            Connection cn = conectar.getInstance().getConnection();

            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                Registros[0] = rs.getString("cod_pro");
                Registros[1] = rs.getString("pro_des");
                Registros[2] = rs.getString(2);
                Registros[3] = rs.getString(3);

                model.addRow(Registros);
            }

            tb_control.setModel(model);
            tb_control.getColumnModel().getColumn(0).setPreferredWidth(100);
            tb_control.getColumnModel().getColumn(1).setPreferredWidth(300);
            tb_control.getColumnModel().getColumn(2).setPreferredWidth(120);
            tb_control.getColumnModel().getColumn(3).setPreferredWidth(100);

            conectar.getInstance().closeConnection(cn);

        } catch (SQLException ex) {
            Logger.getLogger(Salidas_productos_cate.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void calcularCantidadPro() {

        int Acumulador = 0;
        int TF = tb_control.getRowCount();
        for (int i = 0; i < TF; i++) {
            int CantidadPro = Integer.valueOf(tb_control.getValueAt(i, 4).toString().replaceAll("\\s", "").replaceAll("[^0-9]", ""));
            Acumulador = Acumulador + CantidadPro;
        }
        //</editor-fold>
        //   lblcanpro.setText(MaskaraPrecioUnitarioEnteros(String.valueOf(Acumulador)));

    }

    public String MaskaraPrecioUnitarioEnteros(String ValorGuaranies) {
        DecimalFormat format = new DecimalFormat("###,###.##");
        long NumeroIntacto = 0L;
        String NroFormatado = "";
        String ValorViejo = ValorGuaranies;
        String a = ValorViejo.replace(",", "");
        NumeroIntacto = Long.valueOf(a);
        NroFormatado = format.format(NumeroIntacto);
        String LuzParaMisOjos = NroFormatado;
        return LuzParaMisOjos;
    }

    public void calcularcantida() {

        String impt = "0", subtotalt = "0";

        for (int i = 0; i < tb_control.getRowCount(); i++) {
            BigDecimal PulidoPrec = ingreso.TransformReales(tb_control.getValueAt(i, 3).toString().replaceAll("\\s", ""));

            impt = ingreso.MaskareaRealesDado_String_ExclusiveMonedas(PulidoPrec.toString());
            subtotalt = ingreso.MaskareaRealesDado_String_ExclusiveMonedas(ingreso.TransformReales(subtotalt).add(ingreso.TransformReales(impt)).toString());

            txt_cant_pro.setText(subtotalt);
        }

    }//FIN METODO

    public void calcularTotal() {

        String impt = "0", subtotalt = "0";

        for (int i = 0; i < tb_control.getRowCount(); i++) {
            BigDecimal PulidoPrec = ingreso.TransformReales(tb_control.getValueAt(i, 2).toString().replaceAll("\\s", ""));

            impt = ingreso.MaskareaRealesDado_String_ExclusiveMonedas(PulidoPrec.toString());
            subtotalt = ingreso.MaskareaRealesDado_String_ExclusiveMonedas(ingreso.TransformReales(subtotalt).add(ingreso.TransformReales(impt)).toString());

            txt_total_ventas.setText(subtotalt);
        }

    }//FIN METODO

}
