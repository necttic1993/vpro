/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Estadisticas_productos;

import Conexion_DB.conectar;
import static Loggin_Principal.Principal.lbl_usu_almacen;
import Productos.Stock_almacenes.Loadinf;
import Productos.items.Departamentos_List_fisico;
import java.net.URL;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.JRPrintServiceExporter;
import net.sf.jasperreports.engine.export.JRPrintServiceExporterParameter;
import net.sf.jasperreports.engine.util.JRLoader;

/**
 *
 * @author Roberto
 */
public class Pro_con_stock extends javax.swing.JDialog {

    /**
     * Creates new form printers
     */
    public Pro_con_stock(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        txt_user_alma.setText(lbl_usu_almacen.getText());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        ch_stock = new javax.swing.JCheckBox();
        jButton3 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txt_user_alma = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton4 = new javax.swing.JButton();
        txt_id_dep_fisico = new javax.swing.JTextField();
        txt_nom_dep_fisico = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Stock");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ch_stock.setBackground(new java.awt.Color(255, 255, 255));
        ch_stock.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ch_stock.setText("Con Stock Disponible");
        ch_stock.setContentAreaFilled(false);
        ch_stock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_stockActionPerformed(evt);
            }
        });
        jPanel1.add(ch_stock, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, 170, 30));

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_cuadro/listas.png"))); // NOI18N
        jButton3.setToolTipText("Imprimir Listado");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, 50, -1));

        jLabel13.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel13.setText("Stock Almacén:");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 100, 30));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel14.setText("Departamento:");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 100, 30));

        txt_user_alma.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        txt_user_alma.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_user_alma.setEnabled(false);
        jPanel1.add(txt_user_alma, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 150, 30));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("...");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, -1, 30));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 490, 10));

        jButton4.setBackground(new java.awt.Color(255, 255, 255));
        jButton4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton4.setText("Listado general con Stock");
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, -1, 40));

        txt_id_dep_fisico.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_id_dep_fisico.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_id_dep_fisico.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_id_dep_fisico.setEnabled(false);
        jPanel1.add(txt_id_dep_fisico, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 40, 80, 30));

        txt_nom_dep_fisico.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_nom_dep_fisico.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_nom_dep_fisico.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_nom_dep_fisico.setEnabled(false);
        jPanel1.add(txt_nom_dep_fisico, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 250, 30));

        jButton7.setBackground(new java.awt.Color(255, 255, 255));
        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos_3/lupa.png"))); // NOI18N
        jButton7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 40, 60, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void ch_stockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_stockActionPerformed

    }//GEN-LAST:event_ch_stockActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (txt_user_alma.getText().equals("TODOS")) {

            JOptionPane.showMessageDialog(null, "Seleccione un Almacén/Sucursal Válido");
        } else {

            if (txt_user_alma.getText().equals("0000001")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                String nom_dep = txt_nom_dep_fisico.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);
                                parametro.put("nom_dep", nom_dep);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                String nom_dep = txt_nom_dep_fisico.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);
                                parametro.put("nom_dep", nom_dep);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }

            //demas surcusales
            //2
            if (txt_user_alma.getText().equals("0000002")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_2.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_2.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }

            //03
            if (txt_user_alma.getText().equals("0000003")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_3.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_3.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //04
            if (txt_user_alma.getText().equals("0000004")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_4.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_4.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //5
            if (txt_user_alma.getText().equals("0000005")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_5.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_5.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }

            //*********************
            if (txt_user_alma.getText().equals("0000006")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_6.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_6.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }

            //*********************
            if (txt_user_alma.getText().equals("0000007")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_7.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_7.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //*********************
            if (txt_user_alma.getText().equals("0000008")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_8.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_8.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //*********************
            if (txt_user_alma.getText().equals("0000009")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_9.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_9.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //*********************
            if (txt_user_alma.getText().equals("0000010")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_10.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_10.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            ////almacen 11
            if (txt_user_alma.getText().equals("0000011")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_11.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_11.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //*********************
            if (txt_user_alma.getText().equals("0000012")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_12.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_12.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //*********************
            if (txt_user_alma.getText().equals("0000013")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_13.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_13.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //*********************
            if (txt_user_alma.getText().equals("0000014")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_14.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_14.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            ////almacen 15
            if (txt_user_alma.getText().equals("0000015")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_15.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_15.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //16
            if (txt_user_alma.getText().equals("0000016")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_16.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_16.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
//*****************************
            if (txt_user_alma.getText().equals("0000017")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_17.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_17.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //18
            if (txt_user_alma.getText().equals("0000018")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_18.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_18.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }

            ////almacen 19
            if (txt_user_alma.getText().equals("0000019")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_19.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_19.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }

            ////almacen 20
            if (txt_user_alma.getText().equals("0000020")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_20.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_20.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //*********************
            if (txt_user_alma.getText().equals("0000021")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_21.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_21.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            ////almacen 22
            if (txt_user_alma.getText().equals("0000022")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_22.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_22.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }

            //23
            if (txt_user_alma.getText().equals("0000023")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_23.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_23.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //24
            if (txt_user_alma.getText().equals("0000024")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_24.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_24.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }

            //*********************
            if (txt_user_alma.getText().equals("0000025")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_25.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_25.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //*********************
            if (txt_user_alma.getText().equals("0000026")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_26.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_26.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
            //*********************
            if (txt_user_alma.getText().equals("0000027")) {

                if (ch_stock.isSelected()) {
                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_con_stok_27.jasper");

                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                try {
                                    jrprintServiceExporter.exportReport();
                                } catch (Exception e) {
                                    System.out.printf(e.getMessage());
                                    JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");
                                }
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                } else {

                    PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                    if (printService.length > 0)//si existen impresoras
                    {
                        //se elige la impresora
                        PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                                "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                        if (impresora != null) //Si se selecciono una impresora
                        {
                            try {
                                String dep = txt_id_dep_fisico.getText();
                                String alma = txt_user_alma.getText();
                                Connection cn = conectar.getInstance().getConnection();

                                Map parametro = new HashMap();
                                parametro.clear();
                                parametro.put("dep", dep);
                                parametro.put("alma", alma);

                                JasperReport reporte = null;
                                URL in = this.getClass().getResource("/Productos/Stock_almacenes/stock_gral_27.jasper");
                                reporte = (JasperReport) JRLoader.loadObject(in);

                                JasperPrint print = JasperFillManager.fillReport(reporte, parametro, cn);

                                JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                                jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                                jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                                // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                                jrprintServiceExporter.exportReport();
                                conectar.getInstance().closeConnection(cn);

                            } catch (JRException ex) {
                                JOptionPane.showMessageDialog(null, "Listado sin Stock o verifique el producto");

                            } catch (SQLException ex) {
                                Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }

                    }

                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (lbl_usu_almacen.getText().equals("TODOS")) {
            Almacen_select_stock ass;
            ass = new Almacen_select_stock(new javax.swing.JDialog(), true);
            ass.setVisible(true);
        } else {

            JOptionPane.showMessageDialog(null, "No cuenta con autorización");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (txt_user_alma.getText().equals("TODOS")) {

            JOptionPane.showMessageDialog(null, "Seleccione un Almacén/Sucursal Válido");
        } else {

            if (txt_user_alma.getText().equals("0000001")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {
                            Connection cn = conectar.getInstance().getConnection();

                            Map parametro = new HashMap();
                            parametro.clear();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }

            //demas surcusales
            //2
            if (txt_user_alma.getText().equals("0000002")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {
                            Connection cn = conectar.getInstance().getConnection();

                            Map parametro = new HashMap();
                            parametro.clear();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_2.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }

            if (txt_user_alma.getText().equals("0000003")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_3.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            if (txt_user_alma.getText().equals("0000004")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_4.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            if (txt_user_alma.getText().equals("0000005")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_5.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }

            if (txt_user_alma.getText().equals("0000006")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_6.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }

            if (txt_user_alma.getText().equals("0000007")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_7.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            if (txt_user_alma.getText().equals("0000008")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_8.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            if (txt_user_alma.getText().equals("0000009")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_9.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            if (txt_user_alma.getText().equals("0000010")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_10.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }

            if (txt_user_alma.getText().equals("0000011")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_11.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            if (txt_user_alma.getText().equals("0000012")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_12.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            if (txt_user_alma.getText().equals("0000013")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_13.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            if (txt_user_alma.getText().equals("0000014")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_14.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            //15
            if (txt_user_alma.getText().equals("0000015")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_15.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            //16
            if (txt_user_alma.getText().equals("0000016")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {
                            Connection cn = conectar.getInstance().getConnection();

                            Map parametro = new HashMap();
                            parametro.clear();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_16.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }

            if (txt_user_alma.getText().equals("0000017")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_17.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            //18
            if (txt_user_alma.getText().equals("0000018")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_18.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }

            //19
            if (txt_user_alma.getText().equals("0000019")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_19.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            ////almacen 20
            if (txt_user_alma.getText().equals("0000020")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {
                            Connection cn = conectar.getInstance().getConnection();

                            Map parametro = new HashMap();
                            parametro.clear();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_20.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            if (txt_user_alma.getText().equals("0000021")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_21.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }

            //22
            if (txt_user_alma.getText().equals("0000022")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {
                            Connection cn = conectar.getInstance().getConnection();

                            Map parametro = new HashMap();
                            parametro.clear();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_22.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }

            //23
            if (txt_user_alma.getText().equals("0000023")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_23.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            /////********************************
            if (txt_user_alma.getText().equals("0000024")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_24.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }

            if (txt_user_alma.getText().equals("0000025")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_25.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            if (txt_user_alma.getText().equals("0000026")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_26.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
            if (txt_user_alma.getText().equals("0000027")) {

                PrintService[] printService = PrintServiceLookup.lookupPrintServices(null, null);
                if (printService.length > 0)//si existen impresoras
                {
                    //se elige la impresora
                    PrintService impresora = (PrintService) JOptionPane.showInputDialog(null, "Seleccionar  impresora:",
                            "Imprimir ", JOptionPane.QUESTION_MESSAGE, null, printService, printService[0]);
                    if (impresora != null) //Si se selecciono una impresora
                    {
                        try {

                            Map parametro = new HashMap();
                            parametro.clear();
                            Connection cn = conectar.getInstance().getConnection();

                            JasperReport reporte = null;
                            URL in = this.getClass().getResource("/Productos/Stock_almacenes/Por_departamento_27.jasper");
                            reporte = (JasperReport) JRLoader.loadObject(in);

                            JasperPrint print = JasperFillManager.fillReport(reporte, null, cn);

                            JRPrintServiceExporter jrprintServiceExporter = new JRPrintServiceExporter();

                            jrprintServiceExporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
                            jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE, impresora);
                            // jrprintServiceExporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                            Loadinf cpy;
                            cpy = new Loadinf(new javax.swing.JDialog(), true);
                            cpy.setVisible(true);
                            jrprintServiceExporter.exportReport();
                            conectar.getInstance().closeConnection(cn);

                        } catch (JRException ex) {

                        } catch (SQLException ex) {
                            Logger.getLogger(Pro_con_stock.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                }

            }
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed

        Departamentos_List_fisico dl;
        dl = new Departamentos_List_fisico(new javax.swing.JDialog(), true);
        dl.setVisible(true);
    }//GEN-LAST:event_jButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pro_con_stock.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pro_con_stock.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pro_con_stock.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pro_con_stock.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Pro_con_stock dialog = new Pro_con_stock(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox ch_stock;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    public static javax.swing.JTextField txt_id_dep_fisico;
    public static javax.swing.JTextField txt_nom_dep_fisico;
    public static javax.swing.JTextField txt_user_alma;
    // End of variables declaration//GEN-END:variables

}
