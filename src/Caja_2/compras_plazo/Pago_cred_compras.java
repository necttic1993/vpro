/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Caja_2.compras_plazo;

import Caja_2.Caja_caja;
import static Caja_2.Caja_caja.lbl_total_gs;
import static Caja_2.Caja_caja.txt_des_caja;
import static Caja_2.Caja_caja.txt_nro_docu;
import Conexion_DB.conectar;
import static Loggin_Principal.NECTTIC.ingreso;
import static Loggin_Principal.Principal.lbl_fecha_hoy;
import static Loggin_Principal.Principal.lbl_fecha_principal;
import static Loggin_Principal.Principal.lbl_mone_def;
import static Loggin_Principal.Principal.lbl_usu_nom;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import report.Reportes;

public class Pago_cred_compras extends javax.swing.JDialog {

    DefaultTableModel model;
    DefaultTableModel model_deta;

    public Pago_cred_compras(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();

        txt_plazo_saldo.setDisabledTextColor(Color.red);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txt_nro_venta = new javax.swing.JTextField();
        txt_plazo_saldo = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        btn_busar = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        txt_nom_cli_cred = new javax.swing.JTextField();
        txt_venta_cre_saldo = new javax.swing.JTextField();
        lbl_serie_pago = new javax.swing.JLabel();
        id_cliente_cre = new javax.swing.JTextField();
        txt_monto_pago = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_almacen = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_nro_venta.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        txt_nro_venta.setDisabledTextColor(new java.awt.Color(255, 0, 0));
        txt_nro_venta.setEnabled(false);
        txt_nro_venta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_nro_ventaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_nro_ventaKeyReleased(evt);
            }
        });
        jPanel2.add(txt_nro_venta, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, 150, 32));

        txt_plazo_saldo.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        txt_plazo_saldo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_plazo_saldo.setText("0");
        txt_plazo_saldo.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_plazo_saldo.setEnabled(false);
        txt_plazo_saldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_plazo_saldoActionPerformed(evt);
            }
        });
        jPanel2.add(txt_plazo_saldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 10, 160, 32));

        jLabel8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel8.setText("Saldo a pagar: ");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 10, 110, 30));

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_4/agrega.png"))); // NOI18N
        jButton2.setText("Grabar");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 210, 120, 40));

        btn_busar.setBackground(new java.awt.Color(255, 255, 255));
        btn_busar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btn_busar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Caja_2/iconos/filtros.png"))); // NOI18N
        btn_busar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_busar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_busarActionPerformed(evt);
            }
        });
        jPanel2.add(btn_busar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 10, 50, 32));

        jSeparator2.setForeground(new java.awt.Color(0, 102, 153));
        jPanel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 680, 10));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setText("Compra N°:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, 30));

        txt_nom_cli_cred.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_nom_cli_cred.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_nom_cli_cred.setEnabled(false);
        jPanel2.add(txt_nom_cli_cred, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 40, 500, 32));

        txt_venta_cre_saldo.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        txt_venta_cre_saldo.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_venta_cre_saldo.setText("0");
        txt_venta_cre_saldo.setDisabledTextColor(new java.awt.Color(153, 0, 51));
        txt_venta_cre_saldo.setEnabled(false);
        jPanel2.add(txt_venta_cre_saldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 100, 160, 32));

        lbl_serie_pago.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        lbl_serie_pago.setForeground(new java.awt.Color(0, 102, 0));
        lbl_serie_pago.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jPanel2.add(lbl_serie_pago, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 180, 250, 30));

        id_cliente_cre.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        id_cliente_cre.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        id_cliente_cre.setEnabled(false);
        jPanel2.add(id_cliente_cre, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 100, 32));

        txt_monto_pago.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        txt_monto_pago.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_monto_pago.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_monto_pagoKeyReleased(evt);
            }
        });
        jPanel2.add(txt_monto_pago, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 70, 160, 32));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setText("Monto a pagar:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 70, 110, 30));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setText("Saldo pendiente:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 120, 30));

        txt_almacen.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_almacen.setDisabledTextColor(new java.awt.Color(0, 102, 0));
        txt_almacen.setEnabled(false);
        jPanel2.add(txt_almacen, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 150, 30));

        jLabel7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel7.setText("Cliente:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 70, 30));

        jLabel9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel9.setText("Serie N°:");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 180, 70, 30));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setText("Surcusal:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 80, 30));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 270));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_busarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_busarActionPerformed
        Lista_compras_credito lisvp;
        lisvp = new Lista_compras_credito(new javax.swing.JDialog(), true);
        lisvp.setVisible(true);
    }//GEN-LAST:event_btn_busarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        if ((txt_monto_pago.getText().equals(""))) {
            JOptionPane.showMessageDialog(this, "La descripción o el monto no fueron agregados");

        } else {
            pago_credito();
            actEstadoCompras();
            actpagos();
            cargar_Caja();
            JOptionPane.showMessageDialog(null, "Operación exitosa!");

            /*  if (JOptionPane.showConfirmDialog(rootPane, "Imprimir comprobante, ¿desea continuar?",
             "Imprimir", JOptionPane.WARNING_MESSAGE, JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {

             Reportes reporte = new Reportes();
             try {
             reporte.receb(lbl_serie_pago.getText());

             } catch (SQLException | JRException ex) {
             Logger.getLogger(Pago_cred_compras.class.getName()).log(Level.SEVERE, null, ex);
             }
             }*/
            limpiar();
            this.dispose();
        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void txt_plazo_saldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_plazo_saldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_plazo_saldoActionPerformed

    private void txt_nro_ventaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nro_ventaKeyReleased
        String codigo = txt_nro_venta.getText();

    }//GEN-LAST:event_txt_nro_ventaKeyReleased

    private void txt_nro_ventaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_nro_ventaKeyPressed
        char Tecla = evt.getKeyChar();
        if (Tecla == KeyEvent.VK_ENTER) {
            if (txt_nro_venta.getText().length() != 0) {

            } else {

            }
        }
        if (Tecla == KeyEvent.VK_ESCAPE) {
            this.dispose();

        }
    }//GEN-LAST:event_txt_nro_ventaKeyPressed

    private void txt_monto_pagoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_monto_pagoKeyReleased
        ActivatedYourLife_efect(txt_monto_pago, evt);
        calcular_monto_efect();
        int sig = 1;
        lbl_serie_pago.setText(lbl_fecha_hoy.getText() + "-" + txt_nro_venta.getText() + "-" + sig);

    }//GEN-LAST:event_txt_monto_pagoKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pago_cred_compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pago_cred_compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pago_cred_compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pago_cred_compras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Pago_cred_compras dialog = new Pago_cred_compras(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_busar;
    public static javax.swing.JTextField id_cliente_cre;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator2;
    public static javax.swing.JLabel lbl_serie_pago;
    public static javax.swing.JTextField txt_almacen;
    private javax.swing.JTextField txt_monto_pago;
    public static javax.swing.JTextField txt_nom_cli_cred;
    public static javax.swing.JTextField txt_nro_venta;
    public static javax.swing.JTextField txt_plazo_saldo;
    public static javax.swing.JTextField txt_venta_cre_saldo;
    // End of variables declaration//GEN-END:variables

    void limpiar() {

        txt_plazo_saldo.setText("");
        txt_nro_venta.setText("");
        txt_venta_cre_saldo.setText("");
        txt_monto_pago.setText("");
        txt_nro_venta.requestFocus();
    }

    void cargar_Caja() {

        String nro_venta = txt_nro_venta.getText();
        String valor = txt_monto_pago.getText();

        txt_nro_docu.setText(nro_venta);
        txt_des_caja.setText("PAGO PARCIAL DE LA NOTA N°:" + nro_venta);
        lbl_total_gs.setText(valor);
        Caja_caja.btn_calcular.doClick();
        //  Caja_caja.btn_confirmar.doClick();

    }

    public void calcularTotal() {

    }

    public String ActivatedYourLife_efect(JTextField CampoTexto, java.awt.event.KeyEvent evt) {
        String Retorno = "";
        //<editor-fold defaultstate="collapsed" desc="ACTIONS">
        //<editor-fold defaultstate="collapsed" desc="CLOSER EYES">  
        int KeyCode = evt.getKeyCode();
        if ( //<editor-fold defaultstate="collapsed" desc="PARAMS">
                (KeyCode >= 48 // 48  = VK_0
                && KeyCode <= 57 // 57  = VK_9                
                )
                || (KeyCode >= 96 // 96  = VK_NUMPAD0
                && KeyCode <= 105// 105 = VK_NUMPAD9
                )
                || KeyCode == 8 // 8   = VK_BACK_SPACE
                || KeyCode == 46 // 46  = PUNTO DECIMAL
                //</editor-fold>                        
                ) {
            //<editor-fold defaultstate="collapsed" desc="ACTIONS">
            //<editor-fold defaultstate="collapsed" desc="SECURE ALPHA">
            //<editor-fold defaultstate="collapsed" desc="IF">
            String DigitedText = CampoTexto.getText().replaceAll("\\s", "");
            if (DigitedText.isEmpty()
                    || KeyCode == 44) {
                // NO HACE NADA.-
            }// FIN IF
            //</editor-fold>
            //<editor-fold defaultstate="collapsed" desc="ELSE">
            else {
                //<editor-fold defaultstate="collapsed" desc="MSK">            
                String Tag = lbl_mone_def.getText().replaceAll("\\s", "").toLowerCase();
                if (!Tag.equals("guaraníes")) {
                    //<editor-fold defaultstate="collapsed" desc="PARA MONEDAS CON NROS ENTEROS Y QUE TAMBIEN TENGA PARTE FRACCIONARIA">
                    /*
                     POR EJEMPLO REAL BRASILERO O DOLAR 
                     QUE SI POSEE APARTE DEL ENTERO, TAMBIEN LA PARTE FRACCIONARIA.-
                     VALGA LA REDUNDANCIA EJEMPLO: 
                     2,000.99 $
                     O
                     5.25 R$
                     RECUERDE MY FRIEND DEPENDE DEL CONOCIMIENTO DEL OBSERVADOR LA INTERPRETACION DE LOS SIGNOS, 
                     UNA INTERPRETACION VALIDA SERIA QUE LA COMA " , " FUNCIONARIA COMO SEPARADOR DE MILES
                     Y EL PUNTO " . " COMO DELIMITADOR DE LA PARTE ENTERA DE LA PARTE FRACCIONARIA.-                
                     */
                    //<editor-fold defaultstate="collapsed" desc="CUENTA CUANTOS PUNTOS DECIMALES INGRESO EL USER">
                    int PointCounter = 0, i = 0;
                    while (i < DigitedText.length()) {
                        Object CharacterByCharacter = DigitedText.charAt(i);
                        if (CharacterByCharacter.toString().equals(".")) {
                            PointCounter = PointCounter + 1;
                            if (PointCounter == 2) {
                                i = i + DigitedText.length();
                            }//FIN IF
                        }//FIN IF                    
                        i++;
                    }// FIN WHILE
                    //</editor-fold>
                    //<editor-fold defaultstate="collapsed" desc="CASO INGRESE DOS PUNTOS DE SEGUIDO">
                    if (PointCounter == 2) {
                        String Entera = DigitedText.substring(0, DigitedText.indexOf("."));
                        Entera = Entera.replaceAll("\\s", "");
                        if (Entera.isEmpty() && KeyCode != 46) {
                            CampoTexto.setCaretPosition(Entera.length());
                        }//FIN IF
                        else {
                            if (Entera.isEmpty() && KeyCode == 46) {
                                //<editor-fold defaultstate="collapsed" desc="ACTIONS">
                                String Fraccion = DigitedText.substring(DigitedText.indexOf(".") + 1, DigitedText.length());
                                Fraccion = Fraccion.replace(".", "").replaceAll("\\s", "");
                                String ReIntegrated = "." + Fraccion;
                                CampoTexto.setText(ReIntegrated);
                                int Lenght = ReIntegrated.substring(0, ReIntegrated.indexOf(".")).length();
                                CampoTexto.setCaretPosition(Lenght);
                                //</editor-fold>
                            }//FIN IF
                            else {
                                //<editor-fold defaultstate="collapsed" desc="ACTIONS">
                                String Fraccion = DigitedText.substring(DigitedText.indexOf(".") + 1, DigitedText.length());
                                Entera = MaskaraEnteros(Entera);
                                Fraccion = Fraccion.replace(".", "").replaceAll("\\s", "");
                                if (Fraccion.isEmpty()) {
                                    Fraccion = "00";
                                }//FIN IF
                                if (Fraccion.length() >= 3) {
                                    Fraccion = Fraccion.substring(0, 2);
                                }//FIN IF                                   
                                String ReIntegrated = Entera + ".";
                                CampoTexto.setText(ReIntegrated);
                                CampoTexto.setCaretPosition(ReIntegrated.length());
                                //</editor-fold>
                            }//FIN ELSE
                        }//FIN ELSE
                    }// FIN IF
                    //</editor-fold>
                    //<editor-fold defaultstate="collapsed" desc="INGRESO DE PUNTOS DECIMALES - DOS CASOS">
                    else {
                        //<editor-fold defaultstate="collapsed" desc="CASO 1 - INGRESO PRIMERA VEZ EL PUNTO DECIMAL">
                        if (PointCounter == 1 && evt.getKeyCode() != KeyEvent.VK_BACK_SPACE) {
                            String Entera = DigitedText.substring(0, DigitedText.indexOf("."));
                            String Fraccion = DigitedText.substring(DigitedText.indexOf(".") + 1, DigitedText.length());
                            Entera = MaskaraEnteros(Entera);
                            Fraccion = Fraccion.replace(".", "").replaceAll("\\s", "");
                            if (Fraccion.length() >= 3) {
                                Fraccion = Fraccion.substring(0, 2);
                            }//FIN IF
                            String ReIntegrated = Entera + "." + Fraccion;
                            CampoTexto.setText(ReIntegrated);
                            if (Fraccion.length() == 2) {
                                CampoTexto.setCaretPosition(Entera.length());
                            }//FIN IF
                            else {
                                if (Fraccion.length() != 2) {
                                    CampoTexto.setCaretPosition(ReIntegrated.length());
                                }//FIN IF                            
                            }//FIN ELSE
                        }//FIN IF
                        //</editor-fold>                    
                        //<editor-fold defaultstate="collapsed" desc="CASO 2">
                        else {
                            //<editor-fold defaultstate="collapsed" desc="PRESIONO BACK_SPACE Y YA HAY UN PUNTO DECIMAL">
                            if (PointCounter == 1
                                    && evt.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
                                if (DigitedText.contains(".")) {
                                    String Entera = DigitedText.substring(0, DigitedText.indexOf("."));
                                    Entera = MaskaraEnteros(Entera);
                                    String Fraccion = DigitedText.substring(DigitedText.indexOf(".") + 1, DigitedText.length());
                                    if (Fraccion.length() >= 3) {
                                        Fraccion = Fraccion.substring(0, 2);
                                    }//FIN IF
                                    String ReIntegrated = Entera + "." + Fraccion;
                                    CampoTexto.setText(ReIntegrated);
                                    if (Fraccion.length() == 2) {
                                        CampoTexto.setCaretPosition(Entera.length());
                                    }//FIN IF
                                    else {
                                        if (Fraccion.length() != 2) {
                                            CampoTexto.setCaretPosition(ReIntegrated.length());
                                        }//FIN IF                            
                                    }//FIN ELSE                                
                                }//FIN IF                                    
                            }// FIN IF
                            //</editor-fold>
                            //<editor-fold defaultstate="collapsed" desc="CASO 2 - INGRESO SOLO NRO ENTERO NADA DE PUNTO DECIMAL AUN">
                            if (PointCounter == 0) {
                                String Entera = DigitedText.substring(0, DigitedText.length());
                                Entera = MaskaraEnteros(Entera);
                                String ReIntegrated = Entera + ".00";
                                CampoTexto.setText(ReIntegrated);
                                CampoTexto.setCaretPosition(Entera.length());
                            }//FIN IF                    
                            //</editor-fold>                        
                        }// FIN ELSE
                        //</editor-fold>
                        //</editor-fold>
                    }// FIN ELSE
                    //</editor-fold>
                }//FIN IF
                else {
                    //<editor-fold defaultstate="collapsed" desc="PARA MONEDAS QUE SOLO POSEA NROS ENTEROS">
                    /*
                     POR EJEMPLO NUESTRO ESTIMADO GUARANI SOLO POSEE PARTE ENTERA NO TIENE FRACCIONES.- 
                     VALGA LA REDUNDANCIA EJEMPLO: 
                     10,000 Gs
                     O
                     1,500 Gs
                     RECUERDE MY FRIEND DEPENDE DEL CONOCIMIENTO DEL OBSERVADOR LA INTERPRETACION DE LOS SIGNOS, 
                     UNA INTERPRETACION VALIDA SERIA QUE LA COMA " , " FUNCIONARIA COMO SEPARADOR DE MILES
                     Y EL PUNTO " . " COMO DELIMITADOR DE LA PARTE ENTERA DE LA PARTE FRACCIONARIA.-
                     */
                    this.txt_monto_pago.setText(
                            MaskaraEnteros(DigitedText)
                    );
                    //</editor-fold>
                }//FIN ELSE        
                //</editor-fold>    
            }// FIN ELSE
            //</editor-fold>    
            //</editor-fold>
            //</editor-fold>
        }//FIN IF
        else {
            //<editor-fold defaultstate="collapsed" desc="OBTIENE PARTE ENTERA Y FRACCIONES">
            String Texting = txt_monto_pago.getText();
            if (Texting.contains(".")) {
                String Entero = Texting.substring(0, Texting.indexOf("."));
                Entero = MaskaraEnteros(Entero);
                String Fraccion = Texting.substring(Texting.indexOf(".") + 1, Texting.length());
                String Integrated = Entero + "." + Fraccion.replaceAll("\\D", "");
                this.txt_monto_pago.setText(Integrated);
            }//FIN IF            
            //</editor-fold>            
            //<editor-fold defaultstate="collapsed" desc="ALARMA">

            //</editor-fold>            
        }//FIN ELSE
        //</editor-fold>        
        //</editor-fold>
        return Retorno;
    }// FIN 1º METODO

    public String MaskaraEnteros(String ValorGuaranies) {
        //<editor-fold defaultstate="collapsed" desc="IF">        
        ValorGuaranies = ValorGuaranies.replaceAll("\\s", "").replaceAll("\\D", "");
        if (ValorGuaranies.contains(".")) {
            BigDecimal Rounder = new BigDecimal(ValorGuaranies);
            Rounder = Rounder.setScale(0, BigDecimal.ROUND_HALF_UP);
            ValorGuaranies = Rounder.toString();
            if (ValorGuaranies.contains(".")) {
                ValorGuaranies = ValorGuaranies.substring(0, ValorGuaranies.indexOf("."));
            }
        }// FIN IF
        //</editor-fold>        
        DecimalFormat Formato = new DecimalFormat("###,###.##");
        long NumeroIntacto = 0L;
        String NroFormatado = "";
        String ValorViejo = ValorGuaranies;
        String Puro = ValorViejo.replace(",", "");
        NumeroIntacto = Long.parseLong(Puro);
        NroFormatado = Formato.format(NumeroIntacto);
        String ReadyToExhibit = NroFormatado;
        ReadyToExhibit = ReadyToExhibit.replace(".", ",");
        return ReadyToExhibit;
    }// FIN METODO

    public void calcular_monto_efect() {

        String totalpor = "0";
        BigDecimal Precio_efec = ingreso.TransformReales(txt_plazo_saldo.getText());
        BigDecimal total = ingreso.TransformReales(txt_monto_pago.getText());
        totalpor = ingreso.MaskareaRealesDado_String_ExclusiveMonedas(Precio_efec.subtract(total).toString());

        txt_venta_cre_saldo.setText(totalpor);

    }

    void actEstadoCompras() {
        if (txt_almacen.getText().equals("0000001")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE compras SET monto_cred = '" + monto
                        + "' WHERE cod_comp = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                    conectar.getInstance().closeConnection(cn);

                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }

        //2
        if (txt_almacen.getText().equals("0000002")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_2 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000003")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_3 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000004")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_4 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000005")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_5 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000006")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_6 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000007")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_7 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000008")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_8 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000009")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_9 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000010")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_10 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000011")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_11 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000012")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_12 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000013")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_13 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000014")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_14 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000015")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_15 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
//16
        if (txt_almacen.getText().equals("0000016")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_16 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000017")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_17 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000018")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_18 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000019")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_19 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000020")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_20 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000021")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_21 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000022")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_22 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000023")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_23 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000024")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_24 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000025")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_25 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
        if (txt_almacen.getText().equals("0000026")) {
            try {
                String monto = txt_venta_cre_saldo.getText();
                String nro = txt_nro_venta.getText();

                String sql = "UPDATE ventas_26 SET monto_cred = '" + monto
                        + "' WHERE num_bol = '" + nro + "'";
                try {
                    Connection cn = conectar.getInstance().getConnection();

                    PreparedStatement pst = cn.prepareStatement(sql);
                    pst.executeUpdate();
                    conectar.getInstance().closeConnection(cn);

                    //  JOptionPane.showMessageDialog(null, "Actualizado");
                } catch (SQLException | HeadlessException e) {
                    JOptionPane.showMessageDialog(null, e);
                }

            } catch (Exception e) {
            }
        }
    }

    void actpagos() {
        if (txt_venta_cre_saldo.getText().equals("0") || txt_venta_cre_saldo.getText().equals("0.00")) {

            if (txt_almacen.getText().equals("0000001")) {
                try {
                    String es = ("CONFIRMADA");
                    String nro = txt_nro_venta.getText();

                    String sql = "UPDATE compras SET estado_comp = '" + es
                            + "' WHERE cod_comp = '" + nro + "'";
                    try {
                        Connection cn = conectar.getInstance().getConnection();

                        PreparedStatement pst = cn.prepareStatement(sql);
                        pst.executeUpdate();
                        conectar.getInstance().closeConnection(cn);

                        //  JOptionPane.showMessageDialog(null, "Actualizado");
                    } catch (SQLException | HeadlessException e) {
                        JOptionPane.showMessageDialog(null, e);
                    }

                } catch (Exception e) {
                }
            }

        }
    }

    void pago_credito() {

        String InsertarSQL = "INSERT INTO pago_credito_compras(id_compra,id_cliente,nom_cliente,monto_pagado,saldo_pend,id_surcusal,data_control,data_vista,id_cuenta,user_pago,seire) VALUES (?,?,?,?,?,?,?,?,?,?,?)";

        String id_venta = txt_nro_venta.getText();
        String id_cli = id_cliente_cre.getText();
        String nom_cli = txt_nom_cli_cred.getText();
        String monto_pago = txt_monto_pago.getText();
        String saldo_pend = txt_venta_cre_saldo.getText();
        String id_surcusal = txt_almacen.getText();
        String data_control = lbl_fecha_hoy.getText();
        String data_vista = lbl_fecha_principal.getText();
        String id_cuenta = Caja_caja.txt_nro_his.getText();
        String user_pago = lbl_usu_nom.getText();
        String serie = lbl_serie_pago.getText();

        try {
            Connection cn = conectar.getInstance().getConnection();

            PreparedStatement pst = cn.prepareStatement(InsertarSQL);
            pst.setString(1, id_venta);
            pst.setString(2, id_cli);
            pst.setString(3, nom_cli);
            pst.setString(4, monto_pago);
            pst.setString(5, saldo_pend);
            pst.setString(6, id_surcusal);
            pst.setString(7, data_control);
            pst.setString(8, data_vista);
            pst.setString(9, id_cuenta);
            pst.setString(10, user_pago);
            pst.setString(11, serie);

            int n = pst.executeUpdate();
            conectar.getInstance().closeConnection(cn);

            if (n > 0) {

                // JOptionPane.showMessageDialog(null, "Confirmado");
            }

        } catch (SQLException ex) {
            Logger.getLogger(Caja_caja.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
