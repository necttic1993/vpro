/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Caja_2.Pago_Plazos;

import Administrativo.bancos.Lista_bancos_List_Cheques;
import Estadisticas_productos.*;
import Conexion_DB.conectar;
import static Loggin_Principal.NECTTIC.ingreso;
import static Loggin_Principal.Principal.txt_fecha_backup;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.ss.usermodel.BorderStyle;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.Font;
import org.apache.poi.ss.usermodel.HorizontalAlignment;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.VerticalAlignment;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.util.CellRangeAddress;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class Listado_bancos_recibos extends javax.swing.JDialog {

    DefaultTableModel model;
    private static DefaultTableCellRenderer tcr;

    public Listado_bancos_recibos(javax.swing.JDialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        btn_banco.setEnabled(false);
        btn_cliente.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btn_buscar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tb_control = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jd_fin = new org.jdesktop.swingx.JXDatePicker();
        jd_ini = new org.jdesktop.swingx.JXDatePicker();
        jLabel6 = new javax.swing.JLabel();
        txt_total_ventas = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        txt_id_banco = new javax.swing.JTextField();
        txt_nom_banco = new javax.swing.JTextField();
        btn_banco = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txt_nom_cli = new javax.swing.JTextField();
        txt_id_cli = new javax.swing.JTextField();
        btn_cliente = new javax.swing.JButton();
        ch_todos = new javax.swing.JCheckBox();
        ch_clientes = new javax.swing.JCheckBox();
        ch_bancos = new javax.swing.JCheckBox();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Raz√≥n del Producto");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Cliente:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, 90, 30));

        btn_buscar.setBackground(new java.awt.Color(255, 255, 255));
        btn_buscar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btn_buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon_4/graphic.png"))); // NOI18N
        btn_buscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });
        jPanel1.add(btn_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 80, 60, 50));

        tb_control.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tb_control.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tb_control.setShowHorizontalLines(false);
        tb_control.setShowVerticalLines(false);
        tb_control.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_controlMouseClicked(evt);
            }
        });
        tb_control.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tb_controlKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tb_control);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 980, 320));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Fecha Inicio:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 80, 30));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Fecha Final:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, 80, 30));
        jPanel1.add(jd_fin, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 50, 130, 30));
        jPanel1.add(jd_ini, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 50, 130, 30));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel6.setText("Total Nota:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 480, 70, 30));

        txt_total_ventas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        txt_total_ventas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_total_ventas.setText("0");
        txt_total_ventas.setDisabledTextColor(new java.awt.Color(204, 0, 0));
        txt_total_ventas.setEnabled(false);
        jPanel1.add(txt_total_ventas, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 480, 160, 30));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos_5/sobresalir.png"))); // NOI18N
        jButton1.setToolTipText("Imprimir extracto de venta");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 80, 60, 50));

        txt_id_banco.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_id_banco.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_id_banco.setText("0");
        txt_id_banco.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_id_banco.setEnabled(false);
        jPanel1.add(txt_id_banco, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 90, 30));

        txt_nom_banco.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_nom_banco.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_nom_banco.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_nom_banco.setEnabled(false);
        jPanel1.add(txt_nom_banco, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 370, 30));

        btn_banco.setBackground(new java.awt.Color(255, 255, 255));
        btn_banco.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos_3/lupa.png"))); // NOI18N
        btn_banco.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_banco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_bancoActionPerformed(evt);
            }
        });
        jPanel1.add(btn_banco, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 80, 60, 30));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Banco:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, 30));

        txt_nom_cli.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_nom_cli.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txt_nom_cli.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_nom_cli.setEnabled(false);
        jPanel1.add(txt_nom_cli, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 370, 30));

        txt_id_cli.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        txt_id_cli.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txt_id_cli.setText("0");
        txt_id_cli.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txt_id_cli.setEnabled(false);
        jPanel1.add(txt_id_cli, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 110, 90, 30));

        btn_cliente.setBackground(new java.awt.Color(255, 255, 255));
        btn_cliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos_3/lupa.png"))); // NOI18N
        btn_cliente.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_cliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clienteActionPerformed(evt);
            }
        });
        jPanel1.add(btn_cliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, 60, 30));

        ch_todos.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ch_todos.setSelected(true);
        ch_todos.setText("Todos");
        ch_todos.setContentAreaFilled(false);
        ch_todos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_todosActionPerformed(evt);
            }
        });
        jPanel1.add(ch_todos, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, 30));

        ch_clientes.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ch_clientes.setText("Clientes");
        ch_clientes.setContentAreaFilled(false);
        ch_clientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_clientesActionPerformed(evt);
            }
        });
        jPanel1.add(ch_clientes, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 10, -1, 30));

        ch_bancos.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        ch_bancos.setText("Bancos");
        ch_bancos.setContentAreaFilled(false);
        ch_bancos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ch_bancosActionPerformed(evt);
            }
        });
        jPanel1.add(ch_bancos, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, -1, 30));

        jLabel14.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos_3/lupa.png"))); // NOI18N
        jLabel14.setText("Filtrar por:");
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)));
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 4, 980, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1010, 530));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        java.sql.Date fecha_ini = new java.sql.Date(jd_ini.getDate().getTime());
        java.sql.Date fecha_fin = new java.sql.Date(jd_fin.getDate().getTime());
        String id_cli = txt_id_cli.getText();
        String banco = txt_id_banco.getText();

        if (ch_todos.isSelected()) {
            String sql = "SELECT p.nro_pago,p.nom_banco,p.nro_cheq,p.fecha,p.importe,p.fact_sucursal,c.id_cli,c.nom_cli FROM pago_credito_detalle as p inner join pago_credito as c on p.nro_pago=c.nro_pago where p.fecha_entra BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' ";
            cargar(sql);
            calcularTotal();
        }
        if (ch_bancos.isSelected()) {
            String sql = " SELECT p.nro_pago,p.nom_banco,p.nro_cheq,p.fecha,p.importe,p.fact_sucursal,c.id_cli,c.nom_cli FROM pago_credito_detalle as p inner join pago_credito as c on p.nro_pago=c.nro_pago where p.fecha_entra BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' AND p.di_banco='" + banco + "' ";
            cargar(sql);
            calcularTotal();
        }
        if (ch_clientes.isSelected()) {
            String sql = " SELECT p.nro_pago,p.nom_banco,p.nro_cheq,p.fecha,p.importe,p.fact_sucursal,c.id_cli,c.nom_cli FROM pago_credito_detalle as p inner join pago_credito as c on p.nro_pago=c.nro_pago where p.fecha_entra BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' AND c.id_cli='" + id_cli + "'";
            cargar(sql);
            calcularTotal();
        }


    }//GEN-LAST:event_btn_buscarActionPerformed

    private void tb_controlMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_controlMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tb_controlMouseClicked

    private void tb_controlKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tb_controlKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tb_controlKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        java.sql.Date fecha_ini = new java.sql.Date(jd_ini.getDate().getTime());
        java.sql.Date fecha_fin = new java.sql.Date(jd_fin.getDate().getTime());
        String id_cli = txt_id_cli.getText();
        String banco = txt_id_banco.getText();

        if (ch_todos.isSelected()) {
            try {
                TODOS(fecha_ini, fecha_fin);
            } catch (IOException ex) {
                Logger.getLogger(Exporta_excell_precios_dep.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if (ch_bancos.isSelected()) {

            try {
                BANCOS(fecha_ini, fecha_fin, banco);
            } catch (IOException ex) {
                Logger.getLogger(Exporta_excell_precios_dep.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        if (ch_clientes.isSelected()) {

            try {
                CLIENTES(fecha_ini, fecha_fin, id_cli);
            } catch (IOException ex) {
                Logger.getLogger(Exporta_excell_precios_dep.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_bancoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_bancoActionPerformed

        Lista_bancos_List_Cheques dl;
        dl = new Lista_bancos_List_Cheques(new javax.swing.JDialog(), true);
        dl.setVisible(true);
    }//GEN-LAST:event_btn_bancoActionPerformed

    private void btn_clienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clienteActionPerformed

        Clientes_buscar_List_Cheques cl;
        cl = new Clientes_buscar_List_Cheques(new javax.swing.JDialog(), true);
        cl.setVisible(true);
    }//GEN-LAST:event_btn_clienteActionPerformed

    private void ch_todosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_todosActionPerformed

        ch_clientes.setSelected(false);
        ch_bancos.setSelected(false);
        btn_banco.setEnabled(false);
        btn_cliente.setEnabled(false);
        //
        txt_id_banco.setText("0");
        txt_nom_banco.setText(null);

        txt_id_cli.setText("0");
        txt_nom_cli.setText(null);

    }//GEN-LAST:event_ch_todosActionPerformed

    private void ch_clientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_clientesActionPerformed

        ch_todos.setSelected(false);
        ch_bancos.setSelected(false);
        btn_banco.setEnabled(false);
        btn_cliente.setEnabled(true);
        txt_id_banco.setText("0");
        txt_nom_banco.setText(null);
    }//GEN-LAST:event_ch_clientesActionPerformed

    private void ch_bancosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ch_bancosActionPerformed
        ch_todos.setSelected(false);
        ch_clientes.setSelected(false);
        btn_banco.setEnabled(true);
        btn_cliente.setEnabled(false);
        txt_id_cli.setText("0");
        txt_nom_cli.setText(null);

    }//GEN-LAST:event_ch_bancosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Listado_bancos_recibos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Listado_bancos_recibos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Listado_bancos_recibos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Listado_bancos_recibos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Listado_bancos_recibos dialog = new Listado_bancos_recibos(new javax.swing.JDialog(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_banco;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_cliente;
    private javax.swing.JCheckBox ch_bancos;
    private javax.swing.JCheckBox ch_clientes;
    private javax.swing.JCheckBox ch_todos;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private org.jdesktop.swingx.JXDatePicker jd_fin;
    private org.jdesktop.swingx.JXDatePicker jd_ini;
    public static javax.swing.JTable tb_control;
    public static javax.swing.JTextField txt_id_banco;
    public static javax.swing.JTextField txt_id_cli;
    public static javax.swing.JTextField txt_nom_banco;
    public static javax.swing.JTextField txt_nom_cli;
    private javax.swing.JTextField txt_total_ventas;
    // End of variables declaration//GEN-END:variables

    void cargar(String sql) {
        String[] titulos = {"Nro de Recibo", "Banco", "Nro de cheque", "Fecha", "Valor", "Sucursal", "Id Cliente", "Nombre"};
        String[] Registros = new String[13];
        model = new DefaultTableModel(null, titulos);

        try {
            Connection cn = conectar.getInstance().getConnection();

            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                Registros[0] = rs.getString(1);
                Registros[1] = rs.getString(2);
                Registros[2] = rs.getString(3);
                Registros[3] = rs.getString(4);
                Registros[4] = rs.getString(5);
                Registros[5] = rs.getString(6);
                Registros[6] = rs.getString(7);
                Registros[7] = rs.getString(8);

                model.addRow(Registros);
            }

            tb_control.setModel(model);
            tb_control.getColumnModel().getColumn(0).setPreferredWidth(200);
            tb_control.getColumnModel().getColumn(1).setPreferredWidth(300);
            tb_control.getColumnModel().getColumn(2).setPreferredWidth(120);
            tb_control.getColumnModel().getColumn(3).setPreferredWidth(100);
            tb_control.getColumnModel().getColumn(4).setPreferredWidth(100);
            tb_control.getColumnModel().getColumn(5).setPreferredWidth(100);
            tb_control.getColumnModel().getColumn(6).setPreferredWidth(100);
            tb_control.getColumnModel().getColumn(7).setPreferredWidth(250);

            conectar.getInstance().closeConnection(cn);

        } catch (SQLException ex) {
            Logger.getLogger(Listado_bancos_recibos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public String MaskaraPrecioUnitarioEnteros(String ValorGuaranies) {
        DecimalFormat format = new DecimalFormat("###,###.##");
        long NumeroIntacto = 0L;
        String NroFormatado = "";
        String ValorViejo = ValorGuaranies;
        String a = ValorViejo.replace(",", "");
        NumeroIntacto = Long.valueOf(a);
        NroFormatado = format.format(NumeroIntacto);
        String LuzParaMisOjos = NroFormatado;
        return LuzParaMisOjos;
    }

    public void calcularTotal() {

        String impt = "0", subtotalt = "0";

        for (int i = 0; i < tb_control.getRowCount(); i++) {
            BigDecimal PulidoPrec = ingreso.TransformReales(tb_control.getValueAt(i, 4).toString().replaceAll("\\s", ""));

            impt = ingreso.MaskareaRealesDado_String_ExclusiveMonedas(PulidoPrec.toString());
            subtotalt = ingreso.MaskareaRealesDado_String_ExclusiveMonedas(ingreso.TransformReales(subtotalt).add(ingreso.TransformReales(impt)).toString());

            txt_total_ventas.setText(subtotalt);
        }

    }//FIN METODO

    //excell
    public static void TODOS(Date fecha_ini, Date fecha_fin) throws IOException {

        Workbook book = new XSSFWorkbook();
        Sheet sheet = book.createSheet("Cheques");

        try {

            CellStyle tituloEstilo = book.createCellStyle();
            tituloEstilo.setAlignment(HorizontalAlignment.CENTER);
            tituloEstilo.setVerticalAlignment(VerticalAlignment.CENTER);
            Font fuenteTitulo = book.createFont();
            fuenteTitulo.setFontName("Arial");
            fuenteTitulo.setBold(true);
            fuenteTitulo.setFontHeightInPoints((short) 12);
            tituloEstilo.setFont(fuenteTitulo);

            Row filaTitulo = sheet.createRow(1);
            Cell celdaTitulo = filaTitulo.createCell(1);
            celdaTitulo.setCellStyle(tituloEstilo);
            celdaTitulo.setCellValue("Listado de Cheques");

            sheet.addMergedRegion(new CellRangeAddress(1, 2, 1, 3));

            String[] cabecera = new String[]{"Nro de Recibo", "Banco", "Nro de cheque", "Fecha", "Valor", "Sucursal", "Id Cliente", "Nombre"};

            CellStyle headerStyle = book.createCellStyle();
            headerStyle.setFillForegroundColor(IndexedColors.LIGHT_BLUE.getIndex());
            headerStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
            headerStyle.setBorderBottom(BorderStyle.THIN);
            headerStyle.setBorderLeft(BorderStyle.THIN);
            headerStyle.setBorderRight(BorderStyle.THIN);
            headerStyle.setBorderBottom(BorderStyle.THIN);

            Font font = book.createFont();
            font.setFontName("Arial");
            font.setBold(true);
            font.setColor(IndexedColors.WHITE.getIndex());
            font.setFontHeightInPoints((short) 10);
            headerStyle.setFont(font);

            Row filaEncabezados = sheet.createRow(5);

            for (int i = 0; i < cabecera.length; i++) {
                Cell celdaEnzabezado = filaEncabezados.createCell(i);
                celdaEnzabezado.setCellStyle(headerStyle);
                celdaEnzabezado.setCellValue(cabecera[i]);
            }

            PreparedStatement ps;
            ResultSet rs;

            int numFilaDatos = 6;

            CellStyle datosEstilo = book.createCellStyle();
            datosEstilo.setBorderBottom(BorderStyle.THIN);
            datosEstilo.setBorderLeft(BorderStyle.THIN);
            datosEstilo.setBorderRight(BorderStyle.THIN);
            datosEstilo.setBorderBottom(BorderStyle.THIN);
            Connection cn = conectar.getInstance().getConnection();

            ps = cn.prepareStatement("SELECT p.nro_pago,p.nom_banco,p.nro_cheq,p.fecha,p.importe,p.fact_sucursal,c.id_cli,c.nom_cli FROM pago_credito_detalle as p inner join pago_credito as c on p.nro_pago=c.nro_pago where p.fecha_entra BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' ");
            rs = ps.executeQuery();

            int numCol = rs.getMetaData().getColumnCount();

            while (rs.next()) {
                Row filaDatos = sheet.createRow(numFilaDatos);

                for (int a = 0; a < numCol; a++) {

                    Cell CeldaDatos = filaDatos.createCell(a);
                    CeldaDatos.setCellStyle(datosEstilo);

                    if (a == 2 || a == 3) {
                        CeldaDatos.setCellValue(rs.getString(a + 1));
                    } else {
                        CeldaDatos.setCellValue(rs.getString(a + 1));
                    }
                }

                /* Cell celdaImporte = filaDatos.createCell(4);
                 celdaImporte.setCellStyle(datosEstilo);
                 celdaImporte.setCellFormula(String.format("C%d+D%d", numFilaDatos + 1, numFilaDatos + 1));*/
                numFilaDatos++;

            }

            sheet.autoSizeColumn(0);
            sheet.autoSizeColumn(1);
            sheet.autoSizeColumn(2);
            sheet.autoSizeColumn(3);
            sheet.autoSizeColumn(4);
            sheet.autoSizeColumn(5);
            sheet.autoSizeColumn(6);
            sheet.autoSizeColumn(7);

            sheet.setZoom(120);

            try (FileOutputStream fileOut = new FileOutputStream("C:\\Informes\\Listado de cheques " + txt_fecha_backup.getText() + ".xlsx")) {
                book.write(fileOut);
            }
            JOptionPane.showMessageDialog(null, "Datos guardados en C:Informes");
            conectar.getInstance().closeConnection(cn);

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Exporta_excell_precios_dep.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (IOException | SQLException ex) {
            Logger.getLogger(Exporta_excell_precios_dep.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

    public static void BANCOS(Date fecha_ini, Date fecha_fin, String banco) throws IOException {

        Workbook book = new XSSFWorkbook();
        Sheet sheet = book.createSheet("Cheques");

        try {

            CellStyle tituloEstilo = book.createCellStyle();
            tituloEstilo.setAlignment(HorizontalAlignment.CENTER);
            tituloEstilo.setVerticalAlignment(VerticalAlignment.CENTER);
            Font fuenteTitulo = book.createFont();
            fuenteTitulo.setFontName("Arial");
            fuenteTitulo.setBold(true);
            fuenteTitulo.setFontHeightInPoints((short) 12);
            tituloEstilo.setFont(fuenteTitulo);

            Row filaTitulo = sheet.createRow(1);
            Cell celdaTitulo = filaTitulo.createCell(1);
            celdaTitulo.setCellStyle(tituloEstilo);
            celdaTitulo.setCellValue("Listado de Cheques");

            sheet.addMergedRegion(new CellRangeAddress(1, 2, 1, 3));

            String[] cabecera = new String[]{"Nro de Recibo", "Banco", "Nro de cheque", "Fecha", "Valor", "Sucursal", "Id Cliente", "Nombre"};

            CellStyle headerStyle = book.createCellStyle();
            headerStyle.setFillForegroundColor(IndexedColors.LIGHT_BLUE.getIndex());
            headerStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
            headerStyle.setBorderBottom(BorderStyle.THIN);
            headerStyle.setBorderLeft(BorderStyle.THIN);
            headerStyle.setBorderRight(BorderStyle.THIN);
            headerStyle.setBorderBottom(BorderStyle.THIN);

            Font font = book.createFont();
            font.setFontName("Arial");
            font.setBold(true);
            font.setColor(IndexedColors.WHITE.getIndex());
            font.setFontHeightInPoints((short) 10);
            headerStyle.setFont(font);

            Row filaEncabezados = sheet.createRow(5);

            for (int i = 0; i < cabecera.length; i++) {
                Cell celdaEnzabezado = filaEncabezados.createCell(i);
                celdaEnzabezado.setCellStyle(headerStyle);
                celdaEnzabezado.setCellValue(cabecera[i]);
            }

            PreparedStatement ps;
            ResultSet rs;

            int numFilaDatos = 6;

            CellStyle datosEstilo = book.createCellStyle();
            datosEstilo.setBorderBottom(BorderStyle.THIN);
            datosEstilo.setBorderLeft(BorderStyle.THIN);
            datosEstilo.setBorderRight(BorderStyle.THIN);
            datosEstilo.setBorderBottom(BorderStyle.THIN);
            Connection cn = conectar.getInstance().getConnection();

            ps = cn.prepareStatement("SELECT p.nro_pago,p.nom_banco,p.nro_cheq,p.fecha,p.importe,p.fact_sucursal,c.id_cli,c.nom_cli FROM pago_credito_detalle as p inner join pago_credito as c on p.nro_pago=c.nro_pago where p.fecha_entra BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' ");
            rs = ps.executeQuery();

            int numCol = rs.getMetaData().getColumnCount();

            while (rs.next()) {
                Row filaDatos = sheet.createRow(numFilaDatos);

                for (int a = 0; a < numCol; a++) {

                    Cell CeldaDatos = filaDatos.createCell(a);
                    CeldaDatos.setCellStyle(datosEstilo);

                    if (a == 2 || a == 3) {
                        CeldaDatos.setCellValue(rs.getString(a + 1));
                    } else {
                        CeldaDatos.setCellValue(rs.getString(a + 1));
                    }
                }

                /* Cell celdaImporte = filaDatos.createCell(4);
                 celdaImporte.setCellStyle(datosEstilo);
                 celdaImporte.setCellFormula(String.format("C%d+D%d", numFilaDatos + 1, numFilaDatos + 1));*/
                numFilaDatos++;

            }

            sheet.autoSizeColumn(0);
            sheet.autoSizeColumn(1);
            sheet.autoSizeColumn(2);
            sheet.autoSizeColumn(3);
            sheet.autoSizeColumn(4);
            sheet.autoSizeColumn(5);
            sheet.autoSizeColumn(6);
            sheet.autoSizeColumn(7);

            sheet.setZoom(120);

            try (FileOutputStream fileOut = new FileOutputStream("C:\\Informes\\Listado de cheques por bancos " + txt_fecha_backup.getText() + ".xlsx")) {
                book.write(fileOut);
            }
            JOptionPane.showMessageDialog(null, "Datos guardados en C:Informes");
            conectar.getInstance().closeConnection(cn);

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Exporta_excell_precios_dep.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (IOException | SQLException ex) {
            Logger.getLogger(Exporta_excell_precios_dep.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

    public static void CLIENTES(Date fecha_ini, Date fecha_fin, String id_cli) throws IOException {

        Workbook book = new XSSFWorkbook();
        Sheet sheet = book.createSheet("Cheques");

        try {

            CellStyle tituloEstilo = book.createCellStyle();
            tituloEstilo.setAlignment(HorizontalAlignment.CENTER);
            tituloEstilo.setVerticalAlignment(VerticalAlignment.CENTER);
            Font fuenteTitulo = book.createFont();
            fuenteTitulo.setFontName("Arial");
            fuenteTitulo.setBold(true);
            fuenteTitulo.setFontHeightInPoints((short) 12);
            tituloEstilo.setFont(fuenteTitulo);

            Row filaTitulo = sheet.createRow(1);
            Cell celdaTitulo = filaTitulo.createCell(1);
            celdaTitulo.setCellStyle(tituloEstilo);
            celdaTitulo.setCellValue("Listado de Cheques");

            sheet.addMergedRegion(new CellRangeAddress(1, 2, 1, 3));

            String[] cabecera = new String[]{"Nro de Recibo", "Banco", "Nro de cheque", "Fecha", "Valor", "Sucursal", "Id Cliente", "Nombre"};

            CellStyle headerStyle = book.createCellStyle();
            headerStyle.setFillForegroundColor(IndexedColors.LIGHT_BLUE.getIndex());
            headerStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND);
            headerStyle.setBorderBottom(BorderStyle.THIN);
            headerStyle.setBorderLeft(BorderStyle.THIN);
            headerStyle.setBorderRight(BorderStyle.THIN);
            headerStyle.setBorderBottom(BorderStyle.THIN);

            Font font = book.createFont();
            font.setFontName("Arial");
            font.setBold(true);
            font.setColor(IndexedColors.WHITE.getIndex());
            font.setFontHeightInPoints((short) 10);
            headerStyle.setFont(font);

            Row filaEncabezados = sheet.createRow(5);

            for (int i = 0; i < cabecera.length; i++) {
                Cell celdaEnzabezado = filaEncabezados.createCell(i);
                celdaEnzabezado.setCellStyle(headerStyle);
                celdaEnzabezado.setCellValue(cabecera[i]);
            }

            PreparedStatement ps;
            ResultSet rs;

            int numFilaDatos = 6;

            CellStyle datosEstilo = book.createCellStyle();
            datosEstilo.setBorderBottom(BorderStyle.THIN);
            datosEstilo.setBorderLeft(BorderStyle.THIN);
            datosEstilo.setBorderRight(BorderStyle.THIN);
            datosEstilo.setBorderBottom(BorderStyle.THIN);
            Connection cn = conectar.getInstance().getConnection();

            ps = cn.prepareStatement("SELECT p.nro_pago,p.nom_banco,p.nro_cheq,p.fecha,p.importe,p.fact_sucursal,c.id_cli,c.nom_cli FROM pago_credito_detalle as p inner join pago_credito as c on p.nro_pago=c.nro_pago where p.fecha_entra BETWEEN '" + fecha_ini + "' AND '" + fecha_fin + "' AND c.id_cli='" + id_cli + "'");
            rs = ps.executeQuery();

            int numCol = rs.getMetaData().getColumnCount();

            while (rs.next()) {
                Row filaDatos = sheet.createRow(numFilaDatos);

                for (int a = 0; a < numCol; a++) {

                    Cell CeldaDatos = filaDatos.createCell(a);
                    CeldaDatos.setCellStyle(datosEstilo);

                    if (a == 2 || a == 3) {
                        CeldaDatos.setCellValue(rs.getString(a + 1));
                    } else {
                        CeldaDatos.setCellValue(rs.getString(a + 1));
                    }
                }

                /* Cell celdaImporte = filaDatos.createCell(4);
                 celdaImporte.setCellStyle(datosEstilo);
                 celdaImporte.setCellFormula(String.format("C%d+D%d", numFilaDatos + 1, numFilaDatos + 1));*/
                numFilaDatos++;

            }

            sheet.autoSizeColumn(0);
            sheet.autoSizeColumn(1);
            sheet.autoSizeColumn(2);
            sheet.autoSizeColumn(3);
            sheet.autoSizeColumn(4);
            sheet.autoSizeColumn(5);
            sheet.autoSizeColumn(6);
            sheet.autoSizeColumn(7);

            sheet.setZoom(120);

            try (FileOutputStream fileOut = new FileOutputStream("C:\\Informes\\Listado de cheques por clientes " + txt_fecha_backup.getText() + ".xlsx")) {
                book.write(fileOut);
            }
            JOptionPane.showMessageDialog(null, "Datos guardados en C:Informes");
            conectar.getInstance().closeConnection(cn);

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Exporta_excell_precios_dep.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (IOException | SQLException ex) {
            Logger.getLogger(Exporta_excell_precios_dep.class
                    .getName()).log(Level.SEVERE, null, ex);
        }

    }

}
